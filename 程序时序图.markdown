# 程序时序图设计

以下时序图展示了使用 Playwright 实现网页内容抓取的线程执行流程，包括线程 A、B、C 的创建和交互逻辑，以及异常处理。

```mermaid
sequenceDiagram
    participant A as 线程 A
    participant B as 线程 B
    participant C as 线程 C

    loop 循环执行
        A->>A: 创建浏览器实例并登录
        loop 内部循环
            B->>B: 定时刷新网页并保存内容
            alt 浏览器实例异常
                B-->>A: 关闭浏览器实例
                B-->>B: 关闭线程 B
                B-->>C: 关闭线程 C
                break
            else 正常执行
                B-->>C: 执行完毕，创建线程 C
                C->>C: 处理错误日志
                C-->>B: 执行完毕，执行线程 B
            end
        end
    end
```

## 说明
1. **线程 A**：负责创建单个浏览器实例并完成 www.hktlora.com 的登录逻辑。
2. **线程 B**：定时刷新指定网页，抓取内容并保存到本地 JSON 文件，同时记录错误信息到日志文件。
3. **线程 C**：定时处理线程 B 生成的错误日志。
4. **执行逻辑**：
   - 先创建线程 A，完成浏览器实例创建和登录。
   - 线程 A 执行完毕后，进入内部循环，线程 B 和线程 C 交替执行。
   - 线程 B 每次执行完毕后创建线程 C，线程 C 执行完毕后重新执行线程 B，如此循环。
5. **异常处理**：
   - 如果浏览器实例发生异常，线程 B 关闭浏览器实例及所有线程。
   - 跳出内部循环，重新执行外层循环，从线程 A 开始。